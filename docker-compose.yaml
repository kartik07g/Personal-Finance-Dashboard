version: "3.9"

services:
  frontend:
    build: 
      context: ./finance-dashboard-frontend
      dockerfile: Dockerfile
    image: finance-dashboard-frontend:latest
    container_name: finance-dashboard-frontend
    volumes:
      - ./finance-dashboard-frontend:/app
      - /app/node_modules  # Prevent overwriting node_modules
    ports:
      - "3000:3000"
    depends_on:
      - apiproxy
    environment:
      - WATCHPACK_POLLING=true
      - CHOKIDAR_USEPOLLING=true  # Fix file change detection in Docker
    # networks:
    # - app_network
    command: ["npm", "start"]

  apiproxy:
    build:
      context: ./finance-api-proxy
      dockerfile: Dockerfile
    image: finance-api-proxy:latest
    container_name: finance-api-proxy
    volumes:
      - ./finance-api-proxy:/app
      - /app/node_modules  # Prevent overwriting node_modules
    ports:
      - "4000:4000"
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
    # networks:
    #   - app_network
    command: ["npx", "nodemon", "--legacy-watch", "index.js"]  # Ensures file change detection works

  backend:
    build:
      context: ./finance-api-backend
      dockerfile: Dockerfile
    container_name: finance-api-backend
    image: finance-api-backend:latest
    volumes:
      - ./finance-api-backend:/app
    depends_on:
      db:
        condition: service_healthy  # Ensures backend starts only when DB is ready
    ports:
      - "5000:5000"
    environment:
      - DATABASE_URL=postgresql://postgres:my-secret-pw@db:5432/finance_db
    # networks:
    #   - app_network
    command: ["sh", "-c", "alembic upgrade head && uvicorn api:app --host 0.0.0.0 --port 5000 --reload"]

  db:
    image: postgres:15
    container_name: finance-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: my-secret-pw
      POSTGRES_DB: finance_db
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 5s
      retries: 5
      timeout: 3s

  pgadmin:
    image: dpage/pgadmin4
    container_name: finance-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - db

volumes:
  pg_data:

# networks:
#   app_network:
#     driver: bridge